public class Solution {
    public int divide(int dividend, int divisor) {
        // Handle edge cases
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE; // Overflow case
        }

        // Determine the sign of the result
        boolean negative = (dividend < 0) ^ (divisor < 0);

        // Convert both numbers to their absolute values
        long lDividend = Math.abs((long) dividend);
        long lDivisor = Math.abs((long) divisor);

        // Initialize result
        int result = 0;

        // Perform the division using bit manipulation
        while (lDividend >= lDivisor) {
            long temp = lDivisor;
            long multiple = 1;

            while (lDividend >= (temp << 1)) {
                temp <<= 1;
                multiple <<= 1;
            }

            lDividend -= temp;
            result += multiple;
        }

        // Apply the sign to the result
        return negative ? -result : result;
    }

   
}
